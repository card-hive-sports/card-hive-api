{
 "Description": "ECS Fargate service with Application Load Balancer",
 "Resources": {
  "AuthServiceRepository4B9590D7": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "ImageScanningConfiguration": {
     "ScanOnPush": true
    },
    "ImageTagMutability": "MUTABLE",
    "LifecyclePolicy": {
     "LifecyclePolicyText": "{\"rules\":[{\"rulePriority\":1,\"description\":\"Keep only last 10 images\",\"selection\":{\"tagStatus\":\"any\",\"countType\":\"imageCountMoreThan\",\"countNumber\":10},\"action\":{\"type\":\"expire\"}}]}"
    },
    "RepositoryName": "card-hive/auth-service",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CardHiveEcsStack/AuthServiceRepository/Resource"
   }
  },
  "ClusterEB0386A7": {
   "Type": "AWS::ECS::Cluster",
   "Properties": {
    "ClusterName": "card-hive-cluster",
    "ClusterSettings": [
     {
      "Name": "containerInsights",
      "Value": "enabled"
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CardHiveEcsStack/Cluster/Resource"
   }
  },
  "AuthServiceLogs1AF0638D": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/ecs/card-hive/auth-service",
    "RetentionInDays": 7,
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CardHiveEcsStack/AuthServiceLogs/Resource"
   }
  },
  "TaskExecutionRole250D2532": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for ECS to pull images and access secrets",
    "RoleName": "card-hive-ecs-execution-role",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CardHiveEcsStack/TaskExecutionRole/Resource"
   }
  },
  "TaskExecutionRoleDefaultPolicyA84DD1B0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetAuthorizationToken",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "AuthServiceLogs1AF0638D",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "AuthServiceRepository4B9590D7",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:secretsmanager:us-east-1:765430960003:secret:card-hive/jwt/secret-??????",
        {
         "Fn::ImportValue": "CardHiveDatabaseStack:ExportsOutputRefDatabaseSecret86DBB7B353068790"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TaskExecutionRoleDefaultPolicyA84DD1B0",
    "Roles": [
     {
      "Ref": "TaskExecutionRole250D2532"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CardHiveEcsStack/TaskExecutionRole/DefaultPolicy/Resource"
   }
  },
  "TaskRole30FC0FBB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for the running container",
    "RoleName": "card-hive-ecs-task-role",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CardHiveEcsStack/TaskRole/Resource"
   }
  },
  "TaskRoleDefaultPolicy07FC53DE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:GetSecretValue",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "CardHiveDatabaseStack:ExportsOutputRefDatabaseSecret86DBB7B353068790"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "CardHiveDatabaseStack:ExportsOutputRefDatabaseSecret86DBB7B353068790"
           },
           "-*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TaskRoleDefaultPolicy07FC53DE",
    "Roles": [
     {
      "Ref": "TaskRole30FC0FBB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CardHiveEcsStack/TaskRole/DefaultPolicy/Resource"
   }
  },
  "TaskDef54694570": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "NODE_ENV",
        "Value": "production"
       },
       {
        "Name": "PORT",
        "Value": "3000"
       },
       {
        "Name": "JWT_EXPIRES_IN",
        "Value": "24h"
       },
       {
        "Name": "REFRESH_TOKEN_EXPIRES_IN",
        "Value": "7d"
       }
      ],
      "Essential": true,
      "HealthCheck": {
       "Command": [
        "CMD-SHELL",
        "curl -f http://localhost:3000/api/health || exit 1"
       ],
       "Interval": 30,
       "Retries": 3,
       "StartPeriod": 60,
       "Timeout": 5
      },
      "Image": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           4,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::GetAtt": [
               "AuthServiceRepository4B9590D7",
               "Arn"
              ]
             }
            ]
           }
          ]
         },
         ".dkr.ecr.",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::GetAtt": [
               "AuthServiceRepository4B9590D7",
               "Arn"
              ]
             }
            ]
           }
          ]
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/",
         {
          "Ref": "AuthServiceRepository4B9590D7"
         },
         ":latest"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "AuthServiceLogs1AF0638D"
        },
        "awslogs-stream-prefix": "auth-service",
        "awslogs-region": "us-east-1"
       }
      },
      "Name": "auth-service",
      "PortMappings": [
       {
        "ContainerPort": 3000,
        "Protocol": "tcp"
       }
      ],
      "Secrets": [
       {
        "Name": "DATABASE_URL",
        "ValueFrom": {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "CardHiveDatabaseStack:ExportsOutputRefDatabaseSecret86DBB7B353068790"
           },
           ":DATABASE_URL::"
          ]
         ]
        }
       },
       {
        "Name": "JWT_SECRET",
        "ValueFrom": "arn:aws:secretsmanager:us-east-1:765430960003:secret:card-hive/jwt/secret"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "TaskExecutionRole250D2532",
      "Arn"
     ]
    },
    "Family": "card-hive-auth-service",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     }
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "TaskRole30FC0FBB",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CardHiveEcsStack/TaskDef/Resource"
   }
  },
  "LoadBalancerBE9EEC3A": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Name": "card-hive-alb",
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::ImportValue": "CardHiveVpcStack:ExportsOutputFnGetAttAlbSecurityGroup86A59E99GroupIdE3A37BC7"
     }
    ],
    "Subnets": [
     {
      "Fn::ImportValue": "CardHiveVpcStack:ExportsOutputRefCardHiveVpcPublicSubnet1Subnet8BE4518396612213"
     },
     {
      "Fn::ImportValue": "CardHiveVpcStack:ExportsOutputRefCardHiveVpcPublicSubnet2Subnet9DD5607FCF71CF7B"
     }
    ],
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     }
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "CardHiveEcsStack/LoadBalancer/Resource"
   }
  },
  "LoadBalancerHttpListener22970844": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "TargetGroup3D7CD9B8"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "LoadBalancerBE9EEC3A"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "CardHiveEcsStack/LoadBalancer/HttpListener/Resource"
   }
  },
  "TargetGroup3D7CD9B8": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckIntervalSeconds": 30,
    "HealthCheckPath": "/api/health",
    "HealthCheckTimeoutSeconds": 5,
    "HealthyThresholdCount": 2,
    "Matcher": {
     "HttpCode": "200"
    },
    "Name": "card-hive-tg",
    "Port": 3000,
    "Protocol": "HTTP",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     }
    ],
    "TargetGroupAttributes": [
     {
      "Key": "deregistration_delay.timeout_seconds",
      "Value": "30"
     },
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "UnhealthyThresholdCount": 3,
    "VpcId": {
     "Fn::ImportValue": "CardHiveVpcStack:ExportsOutputRefCardHiveVpc8A5A830F5F21271F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CardHiveEcsStack/TargetGroup/Resource"
   }
  },
  "ServiceD69D759B": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "ClusterEB0386A7"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "DeploymentCircuitBreaker": {
      "Enable": true,
      "Rollback": true
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 100
    },
    "DeploymentController": {
     "Type": "ECS"
    },
    "DesiredCount": 2,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "auth-service",
      "ContainerPort": 3000,
      "TargetGroupArn": {
       "Ref": "TargetGroup3D7CD9B8"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::ImportValue": "CardHiveVpcStack:ExportsOutputFnGetAttEcsSecurityGroup44008BF1GroupIdDE2CA5C5"
       }
      ],
      "Subnets": [
       {
        "Fn::ImportValue": "CardHiveVpcStack:ExportsOutputRefCardHiveVpcPrivateSubnet1SubnetFE099C746105060F"
       },
       {
        "Fn::ImportValue": "CardHiveVpcStack:ExportsOutputRefCardHiveVpcPrivateSubnet2Subnet2E80B1E2173CAE9E"
       }
      ]
     }
    },
    "ServiceName": "card-hive-auth-service",
    "Tags": [
     {
      "Key": "Environment",
      "Value": "Production"
     },
     {
      "Key": "ManagedBy",
      "Value": "CDK"
     }
    ],
    "TaskDefinition": {
     "Ref": "TaskDef54694570"
    }
   },
   "DependsOn": [
    "LoadBalancerHttpListener22970844",
    "TaskRoleDefaultPolicy07FC53DE",
    "TaskRole30FC0FBB"
   ],
   "Metadata": {
    "aws:cdk:path": "CardHiveEcsStack/Service/Service"
   }
  },
  "ServiceTaskCountTarget23E25614": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 10,
    "MinCapacity": 2,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "service/",
       {
        "Ref": "ClusterEB0386A7"
       },
       "/",
       {
        "Fn::GetAtt": [
         "ServiceD69D759B",
         "Name"
        ]
       }
      ]
     ]
    },
    "RoleARN": "arn:aws:iam::765430960003:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
    "ScalableDimension": "ecs:service:DesiredCount",
    "ServiceNamespace": "ecs"
   },
   "DependsOn": [
    "TaskRoleDefaultPolicy07FC53DE",
    "TaskRole30FC0FBB"
   ],
   "Metadata": {
    "aws:cdk:path": "CardHiveEcsStack/Service/TaskCount/Target/Resource"
   }
  },
  "ServiceTaskCountTargetCpuScalingCC8A5DF6": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "CardHiveEcsStackServiceTaskCountTargetCpuScaling2DD1B35F",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "ServiceTaskCountTarget23E25614"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
     },
     "ScaleInCooldown": 60,
     "ScaleOutCooldown": 60,
     "TargetValue": 70
    }
   },
   "DependsOn": [
    "TaskRoleDefaultPolicy07FC53DE",
    "TaskRole30FC0FBB"
   ],
   "Metadata": {
    "aws:cdk:path": "CardHiveEcsStack/Service/TaskCount/Target/CpuScaling/Resource"
   }
  },
  "ServiceTaskCountTargetMemoryScalingEA4B07C8": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "CardHiveEcsStackServiceTaskCountTargetMemoryScaling6834BFD7",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "ServiceTaskCountTarget23E25614"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ECSServiceAverageMemoryUtilization"
     },
     "ScaleInCooldown": 60,
     "ScaleOutCooldown": 60,
     "TargetValue": 80
    }
   },
   "DependsOn": [
    "TaskRoleDefaultPolicy07FC53DE",
    "TaskRole30FC0FBB"
   ],
   "Metadata": {
    "aws:cdk:path": "CardHiveEcsStack/Service/TaskCount/Target/MemoryScaling/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11QXU/DMAz8LXvPwsg/gCF4mQRq94681Iu8ZnGVj04oyn9HbVfa8XTn89nyWUmlnuVuA7ew1U27tXSSuY6gWwG38J1Re5kr7DhQZP8j9me3VEWgDjLvbQoR/dCb6Tt4AxGPENo3PJOjSOwGw3+FXQRy6FfafbZG35PGYWimtQYLJzuu3XNysQjLJsh8YPPhOXWDeeZFEFxlrtiOO0b8Ykt6DDGxItBCiKQtQ3MCC06TM72S+aXrLGkYDjowNK9jb8r4UK99FCK6u2fmq/4RvMH4d+eqLAIWG6TIQYMlZ2ReEg/m8RePygRHD7olZ+ppbon5IJQiKgyc/PTVzxS7FItw3KC8hKdeKal2cre5BKKtTy7SFWU14S/K2wGoKAIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "CardHiveEcsStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "LoadBalancerDNS": {
   "Description": "Application Load Balancer DNS",
   "Value": {
    "Fn::GetAtt": [
     "LoadBalancerBE9EEC3A",
     "DNSName"
    ]
   },
   "Export": {
    "Name": "CardHiveLoadBalancerDNS"
   }
  },
  "ServiceName": {
   "Description": "ECS Service Name",
   "Value": {
    "Fn::GetAtt": [
     "ServiceD69D759B",
     "Name"
    ]
   }
  },
  "ClusterName": {
   "Description": "ECS Cluster Name",
   "Value": {
    "Ref": "ClusterEB0386A7"
   },
   "Export": {
    "Name": "CardHiveClusterName"
   }
  },
  "RepositoryUri": {
   "Description": "ECR Repository URI",
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Fn::Select": [
        4,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "AuthServiceRepository4B9590D7",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".dkr.ecr.",
      {
       "Fn::Select": [
        3,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "AuthServiceRepository4B9590D7",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AuthServiceRepository4B9590D7"
      }
     ]
    ]
   },
   "Export": {
    "Name": "CardHiveRepositoryUri"
   }
  },
  "ExportsOutputRefClusterEB0386A796A0E3FE": {
   "Value": {
    "Ref": "ClusterEB0386A7"
   },
   "Export": {
    "Name": "CardHiveEcsStack:ExportsOutputRefClusterEB0386A796A0E3FE"
   }
  },
  "ExportsOutputFnGetAttServiceD69D759BName51127533": {
   "Value": {
    "Fn::GetAtt": [
     "ServiceD69D759B",
     "Name"
    ]
   },
   "Export": {
    "Name": "CardHiveEcsStack:ExportsOutputFnGetAttServiceD69D759BName51127533"
   }
  },
  "ExportsOutputFnGetAttLoadBalancerBE9EEC3ALoadBalancerFullNameC4A7F574": {
   "Value": {
    "Fn::GetAtt": [
     "LoadBalancerBE9EEC3A",
     "LoadBalancerFullName"
    ]
   },
   "Export": {
    "Name": "CardHiveEcsStack:ExportsOutputFnGetAttLoadBalancerBE9EEC3ALoadBalancerFullNameC4A7F574"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}