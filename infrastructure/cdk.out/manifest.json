{
  "version": "48.0.0",
  "artifacts": {
    "CardHiveVPCStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "CardHiveVPCStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "CardHiveVPCStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://765430960003/us-east-1",
      "properties": {
        "templateFile": "CardHiveVPCStack.template.json",
        "terminationProtection": false,
        "tags": {
          "Environment": "Production",
          "Project": "CardHive"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::765430960003:role/cdk-hnb659fds-deploy-role-765430960003-us-east-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::765430960003:role/cdk-hnb659fds-cfn-exec-role-765430960003-us-east-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-765430960003-us-east-1/b06c44191e1e530973a5e2edb2dc585a0c64c9156a6a54a2838c6df35742567c.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "CardHiveVPCStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::765430960003:role/cdk-hnb659fds-lookup-role-765430960003-us-east-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "CardHiveVPCStack.assets"
      ],
      "metadata": {
        "/CardHiveVPCStack": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "Environment",
                "Value": "Production"
              },
              {
                "Key": "Project",
                "Value": "CardHive"
              }
            ]
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpc8A5A830F"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PublicSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPublicSubnet1Subnet8BE45183"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PublicSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPublicSubnet1RouteTableF0159CA3"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PublicSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPublicSubnet1RouteTableAssociation0AC46165"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PublicSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPublicSubnet1DefaultRoute22D9181D"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PublicSubnet1/EIP": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPublicSubnet1EIP3547DE66"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PublicSubnet1/NATGateway": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPublicSubnet1NATGateway73E4C99F"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PublicSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPublicSubnet2Subnet9DD5607F"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PublicSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPublicSubnet2RouteTableB948E874"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PublicSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPublicSubnet2RouteTableAssociationE5EDEA10"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PublicSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPublicSubnet2DefaultRouteF6048F59"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PrivateSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPrivateSubnet1SubnetFE099C74"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PrivateSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPrivateSubnet1RouteTable52CCD01B"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PrivateSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPrivateSubnet1RouteTableAssociationF7381E2D"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PrivateSubnet1/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPrivateSubnet1DefaultRouteACCE6554"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PrivateSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPrivateSubnet2Subnet2E80B1E2"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PrivateSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPrivateSubnet2RouteTable68A9A67F"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PrivateSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPrivateSubnet2RouteTableAssociationE5DC8C75"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/PrivateSubnet2/DefaultRoute": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcPrivateSubnet2DefaultRoute95B01AAF"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/IsolatedSubnet1/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcIsolatedSubnet1Subnet7BE151B1"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/IsolatedSubnet1/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcIsolatedSubnet1RouteTable65BACA50"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/IsolatedSubnet1/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcIsolatedSubnet1RouteTableAssociation1FA7567A"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/IsolatedSubnet2/Subnet": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcIsolatedSubnet2SubnetE104EF45"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/IsolatedSubnet2/RouteTable": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcIsolatedSubnet2RouteTable2847B105"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/IsolatedSubnet2/RouteTableAssociation": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcIsolatedSubnet2RouteTableAssociationC6258967"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/IGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcIGW4D5AB0F4"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/VPCGW": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcVPCGW19111E57"
          }
        ],
        "/CardHiveVPCStack/CardHiveVpc/RestrictDefaultSecurityGroupCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveVpcRestrictDefaultSecurityGroupCustomResource2068AB3B"
          }
        ],
        "/CardHiveVPCStack/Custom::VpcRestrictDefaultSGCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/CardHiveVPCStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
          }
        ],
        "/CardHiveVPCStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E"
          }
        ],
        "/CardHiveVPCStack/CardHiveAlbSecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveAlbSecurityGroup932FA60C"
          }
        ],
        "/CardHiveVPCStack/EcsSecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcsSecurityGroup44008BF1"
          }
        ],
        "/CardHiveVPCStack/EcsSecurityGroup/from CardHiveVPCStackCardHiveAlbSecurityGroupB05C1F4C:3000": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcsSecurityGroupfromCardHiveVPCStackCardHiveAlbSecurityGroupB05C1F4C3000FE5F63C2"
          }
        ],
        "/CardHiveVPCStack/DatabaseSecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseSecurityGroup7319C0F6"
          }
        ],
        "/CardHiveVPCStack/DatabaseSecurityGroup/from CardHiveVPCStackEcsSecurityGroup560F1F8C:5432": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseSecurityGroupfromCardHiveVPCStackEcsSecurityGroup560F1F8C54323FC66F7F"
          }
        ],
        "/CardHiveVPCStack/VpcFlowLog/IAMRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcFlowLogIAMRoleB4DCB624"
          }
        ],
        "/CardHiveVPCStack/VpcFlowLog/IAMRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcFlowLogIAMRoleDefaultPolicy7533133B"
          }
        ],
        "/CardHiveVPCStack/VpcFlowLog/LogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcFlowLogLogGroupBB186289"
          }
        ],
        "/CardHiveVPCStack/VpcFlowLog/FlowLog": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcFlowLogF72230C7"
          }
        ],
        "/CardHiveVPCStack/VpcID": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcID"
          }
        ],
        "/CardHiveVPCStack/VpcCIDR": [
          {
            "type": "aws:cdk:logicalId",
            "data": "VpcCIDR"
          }
        ],
        "/CardHiveVPCStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/CardHiveVPCStack/Exports/Output{\"Ref\":\"CardHiveVpcIsolatedSubnet1Subnet7BE151B1\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefCardHiveVpcIsolatedSubnet1Subnet7BE151B1F6B2F0E4"
          }
        ],
        "/CardHiveVPCStack/Exports/Output{\"Ref\":\"CardHiveVpcIsolatedSubnet2SubnetE104EF45\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefCardHiveVpcIsolatedSubnet2SubnetE104EF4580838D8C"
          }
        ],
        "/CardHiveVPCStack/Exports/Output{\"Fn::GetAtt\":[\"DatabaseSecurityGroup7319C0F6\",\"GroupId\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttDatabaseSecurityGroup7319C0F6GroupId72A1B827"
          }
        ],
        "/CardHiveVPCStack/Exports/Output{\"Ref\":\"CardHiveVpcPrivateSubnet1SubnetFE099C74\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefCardHiveVpcPrivateSubnet1SubnetFE099C746105060F"
          }
        ],
        "/CardHiveVPCStack/Exports/Output{\"Ref\":\"CardHiveVpcPrivateSubnet2Subnet2E80B1E2\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefCardHiveVpcPrivateSubnet2Subnet2E80B1E2173CAE9E"
          }
        ],
        "/CardHiveVPCStack/Exports/Output{\"Fn::GetAtt\":[\"EcsSecurityGroup44008BF1\",\"GroupId\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttEcsSecurityGroup44008BF1GroupIdDE2CA5C5"
          }
        ],
        "/CardHiveVPCStack/Exports/Output{\"Fn::GetAtt\":[\"CardHiveAlbSecurityGroup932FA60C\",\"GroupId\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttCardHiveAlbSecurityGroup932FA60CGroupIdDF2B73FF"
          }
        ],
        "/CardHiveVPCStack/Exports/Output{\"Ref\":\"CardHiveVpcPublicSubnet1Subnet8BE45183\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefCardHiveVpcPublicSubnet1Subnet8BE4518396612213"
          }
        ],
        "/CardHiveVPCStack/Exports/Output{\"Ref\":\"CardHiveVpcPublicSubnet2Subnet9DD5607F\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefCardHiveVpcPublicSubnet2Subnet9DD5607FCF71CF7B"
          }
        ],
        "/CardHiveVPCStack/Exports/Output{\"Ref\":\"CardHiveVpc8A5A830F\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefCardHiveVpc8A5A830F5F21271F"
          }
        ],
        "/CardHiveVPCStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/CardHiveVPCStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "CardHiveVPCStack"
    },
    "CardHiveRDSStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "CardHiveRDSStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "CardHiveRDSStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://765430960003/us-east-1",
      "properties": {
        "templateFile": "CardHiveRDSStack.template.json",
        "terminationProtection": false,
        "tags": {
          "Environment": "Production",
          "Project": "CardHive"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::765430960003:role/cdk-hnb659fds-deploy-role-765430960003-us-east-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::765430960003:role/cdk-hnb659fds-cfn-exec-role-765430960003-us-east-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-765430960003-us-east-1/57fd1d3840acd610c492caaeb0118de3026ccfdcb8f1d4767e57a7290bcb0d37.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "CardHiveRDSStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::765430960003:role/cdk-hnb659fds-lookup-role-765430960003-us-east-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "CardHiveVPCStack",
        "CardHiveRDSStack.assets"
      ],
      "metadata": {
        "/CardHiveRDSStack": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "Environment",
                "Value": "Production"
              },
              {
                "Key": "Project",
                "Value": "CardHive"
              }
            ]
          }
        ],
        "/CardHiveRDSStack/CardHiveDbSecret/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveDbSecretD6F1B2B3"
          }
        ],
        "/CardHiveRDSStack/CardHiveDbSecret/Attachment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveDbSecretAttachmentAD54F63F"
          }
        ],
        "/CardHiveRDSStack/CardHivePostgresInstance/SubnetGroup/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHivePostgresInstanceSubnetGroup610E90DA"
          }
        ],
        "/CardHiveRDSStack/CardHivePostgresInstance/MonitoringRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHivePostgresInstanceMonitoringRoleB9C3CAF6"
          }
        ],
        "/CardHiveRDSStack/CardHivePostgresInstance/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHivePostgresInstance0F2E6DA3"
          }
        ],
        "/CardHiveRDSStack/CardHiveDbCpuAlarm/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveDbCpuAlarm70C604D7"
          }
        ],
        "/CardHiveRDSStack/CardHiveDbStorageAlarm/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveDbStorageAlarm3C26DFAA"
          }
        ],
        "/CardHiveRDSStack/DbEndpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DbEndpoint"
          }
        ],
        "/CardHiveRDSStack/DbPort": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DbPort"
          }
        ],
        "/CardHiveRDSStack/DbSecretArn": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DbSecretArn"
          }
        ],
        "/CardHiveRDSStack/DbSecurityGroupID": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DbSecurityGroupID"
          }
        ],
        "/CardHiveRDSStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/CardHiveRDSStack/Exports/Output{\"Fn::GetAtt\":[\"CardHivePostgresInstance0F2E6DA3\",\"Endpoint.Address\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttCardHivePostgresInstance0F2E6DA3EndpointAddressB4AB4488"
          }
        ],
        "/CardHiveRDSStack/Exports/Output{\"Fn::GetAtt\":[\"CardHivePostgresInstance0F2E6DA3\",\"Endpoint.Port\"]}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputFnGetAttCardHivePostgresInstance0F2E6DA3EndpointPort4E530206"
          }
        ],
        "/CardHiveRDSStack/Exports/Output{\"Ref\":\"CardHiveDbSecretD6F1B2B3\"}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ExportsOutputRefCardHiveDbSecretD6F1B2B30554D94F"
          }
        ],
        "/CardHiveRDSStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/CardHiveRDSStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "CardHiveRDSStack"
    },
    "CardHiveECSStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "CardHiveECSStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "CardHiveECSStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://765430960003/us-east-1",
      "properties": {
        "templateFile": "CardHiveECSStack.template.json",
        "terminationProtection": false,
        "tags": {
          "Environment": "Production",
          "Project": "CardHive"
        },
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::765430960003:role/cdk-hnb659fds-deploy-role-765430960003-us-east-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::765430960003:role/cdk-hnb659fds-cfn-exec-role-765430960003-us-east-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-765430960003-us-east-1/56adadab25e7ce5490b87b6c572d23c0b7cf11f4e8b3b3085c1548cd7ea6eedd.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "CardHiveECSStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::765430960003:role/cdk-hnb659fds-lookup-role-765430960003-us-east-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "CardHiveVPCStack",
        "CardHiveRDSStack",
        "CardHiveECSStack.assets"
      ],
      "metadata": {
        "/CardHiveECSStack": [
          {
            "type": "aws:cdk:stack-tags",
            "data": [
              {
                "Key": "Environment",
                "Value": "Production"
              },
              {
                "Key": "Project",
                "Value": "CardHive"
              }
            ]
          }
        ],
        "/CardHiveECSStack/CardHiveAuthCluster/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveAuthClusterB9CE2888"
          }
        ],
        "/CardHiveECSStack/CardHiveAppSecret/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveAppSecret63B8AC2F"
          }
        ],
        "/CardHiveECSStack/CardHiveAuthTaskDef/TaskRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveAuthTaskDefTaskRoleF6501E4C"
          }
        ],
        "/CardHiveECSStack/CardHiveAuthTaskDef/TaskRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveAuthTaskDefTaskRoleDefaultPolicyFE1B1BFC"
          }
        ],
        "/CardHiveECSStack/CardHiveAuthTaskDef/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveAuthTaskDef62CF4602"
          }
        ],
        "/CardHiveECSStack/CardHiveAuthTaskDef/ExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveAuthTaskDefExecutionRole1B0F1E0F"
          }
        ],
        "/CardHiveECSStack/CardHiveAuthTaskDef/ExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveAuthTaskDefExecutionRoleDefaultPolicy50A756AB"
          }
        ],
        "/CardHiveECSStack/CardHiveAuthServiceLogs/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveAuthServiceLogsE578C351"
          }
        ],
        "/CardHiveECSStack/CardHiveAuthService/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveAuthService9FBA42D2"
          }
        ],
        "/CardHiveECSStack/CardHiveAuthService/TaskCount/Target/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveAuthServiceTaskCountTarget31265425"
          }
        ],
        "/CardHiveECSStack/CardHiveAuthService/TaskCount/Target/CpuScaling/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveAuthServiceTaskCountTargetCpuScaling40FC8FC0"
          }
        ],
        "/CardHiveECSStack/CardHiveAuthService/TaskCount/Target/MemoryScaling/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveAuthServiceTaskCountTargetMemoryScaling1A0E28C2"
          }
        ],
        "/CardHiveECSStack/CardHiveAuthServiceALB/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveAuthServiceALB2F393B8E"
          }
        ],
        "/CardHiveECSStack/CardHiveAuthServiceALB/HttpListener/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveAuthServiceALBHttpListenerD931CAA2"
          }
        ],
        "/CardHiveECSStack/CardHiveAuthServiceTG/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CardHiveAuthServiceTG144AF5C6"
          }
        ],
        "/CardHiveECSStack/LoadBalancerDNS": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LoadBalancerDNS"
          }
        ],
        "/CardHiveECSStack/EcrRepositoryUri": [
          {
            "type": "aws:cdk:logicalId",
            "data": "EcrRepositoryUri"
          }
        ],
        "/CardHiveECSStack/ClusterName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterName"
          }
        ],
        "/CardHiveECSStack/ServiceName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ServiceName"
          }
        ],
        "/CardHiveECSStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/CardHiveECSStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/CardHiveECSStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "CardHiveECSStack"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/aws-signer:signingProfileNamePassedToCfn": {
            "recommendedValue": true,
            "explanation": "Pass signingProfileName to CfnSigningProfile"
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecs-patterns:secGroupsDisablesImplicitOpenListener": {
            "recommendedValue": true,
            "explanation": "Disable implicit openListener when custom security groups are provided"
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:checkSecretUsage": {
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:explicitStackTags": {
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs."
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration"
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function"
          },
          "@aws-cdk/aws-stepfunctions-tasks:httpInvokeDynamicJsonPathEndpoint": {
            "recommendedValue": true,
            "explanation": "When enabled, allows using a dynamic apiEndpoint with JSONPath format in HttpInvoke tasks.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecs-patterns:uniqueTargetGroupId": {
            "recommendedValue": true,
            "explanation": "When enabled, ECS patterns will generate unique target group IDs to prevent conflicts during load balancer replacement"
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1031.0"
}