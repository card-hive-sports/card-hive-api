generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  CUSTOMER
  ADMIN
  SUPER_ADMIN
}

enum KYCStatus {
  PENDING
  VERIFIED
  REJECTED
}

enum AuthProvider {
  GOOGLE
  APPLE
  PHONE
}

model User {
  id          String    @id @default(uuid())
  fullName    String    @map("full_name")
  email       String?   @unique
  phone       String?   @unique
  dateOfBirth DateTime  @map("date_of_birth")
  role        UserRole  @default(CUSTOMER)
  kycStatus   KYCStatus @default(PENDING) @map("kyc_status")
  isActive    Boolean   @default(true) @map("is_active")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  authProviders AuthProviderLink[]

  @@map("users")
}

model AuthProviderLink {
  id         String       @id @default(uuid())
  userID     String       @map("user_id")
  provider   AuthProvider
  providerID String       @map("provider_id")
  createdAt  DateTime     @default(now()) @map("created_at")

  user User @relation(fields: [userID], references: [id], onDelete: Cascade)

  @@unique([provider, providerID])
  @@map("auth_provider_links")
}

model PhoneVerification {
  id        String   @id @default(uuid())
  phone     String
  code      String
  expiresAt DateTime @map("expires_at")
  verified  Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")

  @@index([phone, code])
  @@map("phone_verifications")
}
